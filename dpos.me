共識演算法 DPoS(Delegated Proof of Stake)
簡峻謙
一、DPoS簡介
DPoS為PoS (Proof of Stake)的改良版，簡單來說就是多了類似於”選舉”的制度以選出代表節點成為當前區塊的寫入者。

DPoS會通過某種機制（例如持有代幣的數量、幣齡的多寡）選出代表投票的節點，與PoS不相同的地方在於，DPoS會在這幾個投票節點之間，進行投票選出每次的檢查點（出塊）節點，而不用從全部的節點中選擇誰是下一個出塊的節點。這種機制能夠有效減少共識的時間，以大幅度提升效率。

下面兩張圖為圖例，說明PoS與DPoS在共識機制上的差別 
  


二、常見的共識演算法比較

	Pow	PoS	DPoS
原理	透過算力進行挖礦，解碼成功的人才能爭取新的區塊記錄權，並獲得獎勵	各節點參與投票，以不同機制(例如數量、幣齡等)以獲取記錄新區塊的權力	類似於Pos，但推舉出”代表"以記錄新區塊
優點	‧網路資源消耗較少(無須多次溝通)	‧可抵抗51%攻擊(可變成軟分叉)
‧算力消耗低	‧可抵抗51%攻擊
‧算力消耗低
‧減少網路資源消耗(只有代表節點進行抉擇)
‧減少共識時間
缺點	‧資原消耗多(需算力)
‧易分岔(被51%攻擊)
‧共識時間長	‧網路資源消耗高
‧中間步驟多，可能產生安全漏洞	‧中間步驟多，可能產生安全漏洞
舉例	BTC,早期ETH	ETH2.0	EOS

四、DPoS原理
DPOS共識算法分為兩個部分：”區塊生產者”和”調度生產”。
	區塊生產者(producer):就是這些具投票資格節點所推舉出以進行記錄的節點
	調度生產:運用特定機制去進行調適，以避免被惡意節點、或是網路碎片(Network Fragmentation)等問題造成分岔
舉例:
假設有3個區塊生產者(producer)：A、B、C。一般規則是最長鏈勝出，且A，B，C通過特定round-robin(循環)的方式生成區塊。



1.正常情況
每一個時間間隔內，只有一個producer來負責生產區塊。
跟隨節點會把交易發送給當前的producer，然後由當前的producer負責驗證並生成區塊，並將區塊進行全網廣播。
 
2.惡意節點多重製造問題
這些惡意節點會自己創建一個或多個分支。我們假設B是惡意節點，那麼有如下圖所示
	 

但惡意節點自己創建的分支(B1、B2)的增長速度永遠趕不上最長分支的增長速度。所以系統中只會有一個最長鏈。（惡意節點產生一個區塊，就需要至少兩個區塊來超過它成為最長的鏈，已成為主鏈，所以時間遠遠不足）
因此我們在此範例，最多只能有1/3的節點(也就是只能是B)是惡意節點。



3.網絡碎片問題
由於網路可能會有不穩定性(網絡連通性低)，因此可能會導致網絡中有多個分支，當合併時會以最長鏈為基礎，當長度相同時則會遵循round-robin機制。

舉例:
當紅線為網絡連通性恢復界限
此時我們將出現三個分支為（A-A-A）、（A-B-B）、(A-C-C)
假設輪到B出塊，因為round-robin的關係，B會選擇被更多producers驗證過的那條分支(例如選(A-C-C)可被三個producers驗證，其餘都是兩個人不是A就是B)，以平衡驗證節點的數量

 


4.最後一個不可逆塊(Last Irreversible Block)
可以通過查看 2⁄3的producers+最後的producers(2⁄3+1)來確定是否為最長鏈

舉例:
在下圖中，區塊 B 已被 C 和 A 確認，代表 2⁄3+1 確認，因此我們可以推斷，如果 2⁄3 的生產者是誠實的，則沒有其他鏈可能更長。
 

如果大多數生產者為惡意節點(>2/3)，即可透過Last Irreversible Block的機制將少數誠實節點所驗證的最長鏈進行恢復(軟分叉)，這也是為什麼可以預防51%攻擊的原因。
